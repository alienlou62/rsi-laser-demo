<UserControl
    x:Class="RapidLaser.Views.MainView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
    xmlns:behaviors="using:RapidLaser.Behaviors"
    xmlns:controls="using:RapidLaser.Controls"
    xmlns:converters="using:RapidLaser.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:icons="using:Material.Icons.Avalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:RapidLaser.ViewModels"
    d:DesignHeight="1000"
    d:DesignWidth="1500"
    x:DataType="vm:MainViewModel"
    mc:Ignorable="d">
    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>

    <ContentControl Classes.is-connected="{Binding IsConnected, Mode=TwoWay}" Classes.is-connected-n="{Binding !IsConnected, Mode=TwoWay}">

        <Grid Margin="12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="280" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Top bar card with drag region  -->
            <Border
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="0,0,0,12"
                Padding="5,7"
                Classes="card"
                PointerPressed="OnTitleBarPointerPressed">

                <Grid Margin="6,0,0,0">

                    <!--  Left side content  -->
                    <StackPanel
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="16">
                        <icons:MaterialIcon
                            Width="25"
                            Height="25"
                            Margin="0,0,-10,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource TextBrush}"
                            Kind="MotionOutline" />
                        <TextBlock
                            Margin="0,-1,0,0"
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource TextBrush}"
                            Text="RapidLaser" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="14"
                            Foreground="{StaticResource SubtleTextBrush}"
                            Text="Real-time Laser Ball Tracker" />
                    </StackPanel>

                    <!--  Button container  -->
                    <StackPanel
                        Margin="0"
                        HorizontalAlignment="Center"
                        IsVisible="{Binding IsConnected}"
                        Orientation="Horizontal"
                        Spacing="6">

                        <!--  Start button  -->
                        <Button
                            HorizontalAlignment="Stretch"
                            Classes="theme-soft success"
                            Command="{Binding ProgramRunCommand}"
                            IsVisible="{Binding !IsProgramRunning}"
                            ToolTip.Tip="{Binding SshRunCommand}">
                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <icons:MaterialIcon
                                    Width="20"
                                    Height="20"
                                    Kind="CogPlayOutline" />
                                <TextBlock VerticalAlignment="Center" Text="Configure RMP &amp; Run Tasks" />
                            </StackPanel>
                        </Button>

                        <!--  Kill button  -->
                        <Button
                            HorizontalAlignment="Stretch"
                            Classes="theme-soft danger"
                            Command="{Binding ProgramStopCommand}"
                            IsVisible="{Binding IsProgramRunning}"
                            ToolTip.Tip="RTTaskManager.Shutdown() ">
                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <icons:MaterialIcon
                                    Width="16"
                                    Height="16"
                                    Kind="Skull" />
                                <TextBlock VerticalAlignment="Center" Text="Kill Program" />
                            </StackPanel>
                        </Button>

                        <!--  Pause/Resume button  -->
                        <Panel IsVisible="False">
                            <!--  Pause  -->
                            <Button
                                HorizontalAlignment="Stretch"
                                Classes="theme-soft accent"
                                Command="{Binding ToggleMotionPauseCommand}"
                                IsVisible="{Binding !IsProgramPaused}">
                                <StackPanel Orientation="Horizontal" Spacing="2">
                                    <icons:MaterialIcon
                                        Width="19"
                                        Height="19"
                                        Kind="Pause" />
                                    <TextBlock VerticalAlignment="Center" Text="Pause Program" />
                                </StackPanel>
                            </Button>

                            <!--  Resume  -->
                            <Button
                                HorizontalAlignment="Stretch"
                                Classes="theme-soft success"
                                Command="{Binding ToggleMotionPauseCommand}"
                                IsVisible="{Binding IsProgramPaused}">
                                <StackPanel Orientation="Horizontal" Spacing="0">
                                    <icons:MaterialIcon
                                        Width="20"
                                        Height="20"
                                        Kind="PlayOutline" />
                                    <TextBlock VerticalAlignment="Center" Text="Resume Program" />
                                </StackPanel>
                            </Button>
                        </Panel>

                        <!--  Separator  -->
                        <Border
                            Width="1"
                            Height="24"
                            Margin="4,0"
                            Background="{StaticResource SubtleTextBrush}"
                            IsVisible="{Binding IsProgramRunning}"
                            Opacity="0.1" />

                        <!--  Motion Enable/Disable Toggle  -->
                        <ToggleButton
                            HorizontalAlignment="Stretch"
                            Classes="theme-soft"
                            Classes.danger="{Binding !Program_IsMotionEnabled}"
                            Classes.success="{Binding Program_IsMotionEnabled}"
                            Command="{Binding ToggleProgramMotionEnabledCommand}"
                            CommandParameter="{Binding $self.IsChecked}"
                            IsChecked="{Binding Program_IsMotionEnabled}"
                            IsEnabled="{Binding Program_IsMotionEnabled, Converter={x:Static ObjectConverters.IsNotNull}}"
                            IsVisible="{Binding IsProgramRunning}"
                            ToolTip.Tip="Enable/Disable Motion Control">
                            <ToggleButton.Styles>
                                <!--  Unchecked (Motion Disabled)  -->
                                <Style Selector="ToggleButton">
                                    <Setter Property="Content">
                                        <Template>
                                            <StackPanel Orientation="Horizontal" Spacing="4">
                                                <icons:MaterialIcon
                                                    Width="16"
                                                    Height="16"
                                                    Kind="MotionPause" />
                                                <TextBlock VerticalAlignment="Center" Text="Motion OFF" />
                                            </StackPanel>
                                        </Template>
                                    </Setter>
                                </Style>
                                <!--  Checked (Motion Enabled)  -->
                                <Style Selector="ToggleButton:checked">
                                    <Setter Property="Content">
                                        <Template>
                                            <StackPanel Orientation="Horizontal" Spacing="4">
                                                <icons:MaterialIcon
                                                    Width="16"
                                                    Height="16"
                                                    Kind="MotionPlay" />
                                                <TextBlock VerticalAlignment="Center" Text="Motion ON" />
                                            </StackPanel>
                                        </Template>
                                    </Setter>
                                </Style>
                            </ToggleButton.Styles>
                        </ToggleButton>

                    </StackPanel>

                    <!--  Right side content with status and custom window controls  -->
                    <StackPanel
                        Margin="0,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="12">

                        <!--  System Status Indicator  -->
                        <!--<TextBlock
                            Classes="status-text status-active"
                            FontWeight="SemiBold"
                            Text="{Binding ProgramStatus}" />-->

                        <!--  FPS Counter  -->
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="12"
                            Foreground="{StaticResource SubtleTextBrush}"
                            IsVisible="False"
                            Text="30 FPS" />

                        <!--  Custom Window Controls  -->
                        <StackPanel
                            Margin="16,0,0,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="0">

                            <!--  Minimize Button  -->
                            <Button
                                Name="MinimizeButton"
                                Width="32"
                                Height="32"
                                Padding="6"
                                VerticalAlignment="Center"
                                Classes="theme-subtle shadowless"
                                Command="{Binding MinimizeWindowCommand}"
                                Foreground="{StaticResource SubtleTextBrush}">
                                <Button.Content>
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,0 L 8,0"
                                        Stroke="{Binding $parent[Button].Foreground}"
                                        StrokeThickness="1" />
                                </Button.Content>
                            </Button>

                            <!--  Maximize/Restore Button  -->
                            <Button
                                Name="MaximizeButton"
                                Width="32"
                                Height="32"
                                Padding="6"
                                VerticalAlignment="Center"
                                Classes="theme-subtle shadowless"
                                Command="{Binding MaximizeWindowCommand}"
                                Foreground="{StaticResource SubtleTextBrush}">
                                <Button.Content>
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,0 L 8,0 L 8,8 L 0,8 Z"
                                        Fill="Transparent"
                                        Stroke="{Binding $parent[Button].Foreground}"
                                        StrokeThickness="1" />
                                </Button.Content>
                            </Button>

                            <!--  Close Button  -->
                            <Button
                                Name="CloseButton"
                                Width="32"
                                Height="32"
                                Padding="6"
                                VerticalAlignment="Center"
                                Classes="theme-subtle shadowless"
                                Command="{Binding CloseWindowCommand}"
                                Foreground="{StaticResource SubtleTextBrush}">
                                <Button.Content>
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,0 L 8,8 M 8,0 L 0,8"
                                        Stroke="{Binding $parent[Button].Foreground}"
                                        StrokeThickness="1" />
                                </Button.Content>
                                <Button.Styles>
                                    <Style Selector="Button:pointerover">
                                        <Setter Property="Foreground" Value="#E81123" />
                                    </Style>
                                </Button.Styles>
                            </Button>

                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>

            <!--  Left sidebar - stacked cards  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="0"
                Margin="0,0,12,0"
                VerticalAlignment="Top"
                Spacing="12">

                <!--  gRPC Connection Card  -->
                <Border Classes="card" ClipToBounds="True">

                    <Grid>
                        <!--  Subtle gradient overlay  -->
                        <actipro:MeshGradientPresenter Margin="-12" IsVisible="{Binding IsConnected}">
                            <actipro:MeshGradientPresenter.Styles>
                                <Style Selector="actipro|MeshGradientPresenter">
                                    <Style.Animations>
                                        <Animation IterationCount="INFINITE" Duration="0:0:3">
                                            <KeyFrame Cue="0%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                            <KeyFrame Cue="50%">
                                                <Setter Property="Opacity" Value="0.3" />
                                            </KeyFrame>
                                            <KeyFrame Cue="100%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                        </Animation>
                                    </Style.Animations>
                                </Style>
                            </actipro:MeshGradientPresenter.Styles>
                            <actipro:MeshGradientNode Center="100%, 0%" Color="#304CAF50" />
                            <actipro:MeshGradientNode Center="0%, 100%" Color="#00000000" />
                        </actipro:MeshGradientPresenter>

                        <actipro:MeshGradientPresenter Margin="-12" IsVisible="{Binding !IsConnected}">
                            <actipro:MeshGradientPresenter.Styles>
                                <Style Selector="actipro|MeshGradientPresenter">
                                    <Style.Animations>
                                        <Animation IterationCount="INFINITE" Duration="0:0:3">
                                            <KeyFrame Cue="0%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                            <KeyFrame Cue="50%">
                                                <Setter Property="Opacity" Value="0.3" />
                                            </KeyFrame>
                                            <KeyFrame Cue="100%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                        </Animation>
                                    </Style.Animations>
                                </Style>
                            </actipro:MeshGradientPresenter.Styles>
                            <actipro:MeshGradientNode Center="100%, 0%" Color="#30F44336" />
                            <actipro:MeshGradientNode Center="0%, 100%" Color="#00000000" />
                        </actipro:MeshGradientPresenter>

                        <StackPanel>
                            <Grid Margin="0,0,0,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource TextBrush}"
                                    Text="RapidServer" />

                                <icons:MaterialIcon
                                    Grid.Column="1"
                                    Width="18"
                                    Height="18"
                                    VerticalAlignment="Center">
                                    <icons:MaterialIcon.Styles>
                                        <Style Selector="ContentControl.is-connected icons|MaterialIcon">
                                            <Setter Property="Kind" Value="LanCheck" />
                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                        </Style>
                                        <Style Selector="ContentControl:not(.is-connected) icons|MaterialIcon">
                                            <Setter Property="Kind" Value="LanDisconnect" />
                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                        </Style>
                                    </icons:MaterialIcon.Styles>
                                </icons:MaterialIcon>
                            </Grid>

                            <!--  Server Configuration (disabled when using mock or when connected)  -->
                            <StackPanel Spacing="8">
                                <!-- <StackPanel.Styles>
                                    <Style Selector="ContentControl.is-connected controls|LabeledControl TextPresenter">
                                        <Setter Property="TextElement.Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccessPressed}" />
                                    </Style>
                                </StackPanel.Styles>-->

                                <!--  IP Address  -->
                                <controls:LabeledControl
                                    IsEnabled="{Binding !IsConnected}"
                                    Label="IP Address"
                                    LabelWidth="60">
                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        Text="{Binding IpAddress}"
                                        ToolTip.Tip="IP Address">
                                        <TextBox.KeyBindings>
                                            <KeyBinding Command="{Binding ConnectCommand}" Gesture="Enter" />
                                        </TextBox.KeyBindings>
                                    </TextBox>
                                </controls:LabeledControl>

                                <!--  Port  -->
                                <controls:LabeledControl
                                    IsEnabled="{Binding !IsConnected}"
                                    Label="Port"
                                    LabelWidth="60">
                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        Text="{Binding Port}"
                                        ToolTip.Tip="Port">
                                        <TextBox.KeyBindings>
                                            <KeyBinding Command="{Binding ConnectCommand}" Gesture="Enter" />
                                        </TextBox.KeyBindings>
                                    </TextBox>
                                </controls:LabeledControl>

                                <!--  Connection Buttons  -->
                                <Button
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Right"
                                    Classes="theme-soft success"
                                    Command="{Binding ConnectCommand}"
                                    Content="Connect"
                                    IsEnabled="{Binding !IsConnecting}"
                                    IsVisible="{Binding !IsConnected}" />
                            </StackPanel>

                            <Button
                                Margin="0,10,0,0"
                                HorizontalAlignment="Right"
                                Classes="theme-soft danger"
                                Command="{Binding DisconnectCommand}"
                                Content="Disconnect"
                                FontSize="12"
                                IsVisible="{Binding IsConnected}" />


                            <!--  Error Display  -->
                            <TextBlock
                                Margin="0,8,0,0"
                                Foreground="#F44336"
                                IsVisible="{Binding LastError, Converter={x:Static converters:BoolConverters.StringNotEmptyToBoolConverter}}"
                                Text="{Binding LastError}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </Grid>
                </Border>

                <!--  SSH Card  -->
                <Border Classes="card" IsEnabled="{Binding IsConnected}">

                    <StackPanel Spacing="8">
                        <Grid Margin="0,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource TextBrush}"
                                Text="SSH" />

                            <icons:MaterialIcon
                                Grid.Column="1"
                                Width="17"
                                Height="17"
                                VerticalAlignment="Center"
                                Classes.is-ssh-authenticated="{Binding IsSshAuthenticated}"
                                Classes.is-ssh-not-authenticated="{Binding !IsSshAuthenticated}">
                                <icons:MaterialIcon.Styles>
                                    <Style Selector="icons|MaterialIcon.is-ssh-authenticated">
                                        <Setter Property="Kind" Value="AccountCheck" />
                                        <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                    </Style>
                                    <Style Selector="icons|MaterialIcon.is-ssh-not-authenticated">
                                        <Setter Property="Kind" Value="AccountOff" />
                                        <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                    </Style>
                                </icons:MaterialIcon.Styles>
                            </icons:MaterialIcon>
                        </Grid>


                        <StackPanel IsVisible="{Binding IsConnected}" Spacing="8">

                            <!--  usernmae  -->
                            <controls:LabeledControl
                                IsEnabled="{Binding !IsSshAuthenticated}"
                                Label="Username"
                                LabelWidth="60">
                                <TextBox HorizontalAlignment="Stretch" Text="{Binding SshUser}" />
                            </controls:LabeledControl>

                            <!--  password  -->
                            <controls:LabeledControl
                                IsEnabled="{Binding !IsSshAuthenticated}"
                                Label="Password"
                                LabelWidth="60">
                                <TextBox HorizontalAlignment="Stretch" Text="{Binding SshPassword}" />
                            </controls:LabeledControl>

                            <!--  Test Connection Button  -->
                            <Button
                                Margin="0,2,0,0"
                                HorizontalAlignment="Right"
                                Classes="theme-soft"
                                Command="{Binding TestSshConnectionCommand}"
                                IsEnabled="{Binding IsConnected}">
                                <StackPanel Orientation="Horizontal" Spacing="6">
                                    <icons:MaterialIcon
                                        Width="16"
                                        Height="16"
                                        IsVisible="False"
                                        Kind="Connection" />
                                    <TextBlock Text="Test Connection" />
                                </StackPanel>
                            </Button>

                        </StackPanel>


                    </StackPanel>
                </Border>

                <!--  Camera Card  -->
                <Border Classes="card" IsEnabled="{Binding IsConnected}">

                    <StackPanel Spacing="8">
                        <Grid Margin="0,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource TextBrush}"
                                Text="Camera Stream" />

                            <icons:MaterialIcon
                                Grid.Column="1"
                                Width="17"
                                Height="17"
                                VerticalAlignment="Center"
                                Classes.is-camera-not-streaming="{Binding !IsCameraStreaming}"
                                Classes.is-camera-streaming="{Binding IsCameraStreaming}">
                                <icons:MaterialIcon.Styles>
                                    <Style Selector="icons|MaterialIcon.is-camera-streaming">
                                        <Setter Property="Kind" Value="VideoCheck" />
                                        <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                    </Style>
                                    <Style Selector="icons|MaterialIcon.is-camera-not-streaming">
                                        <Setter Property="Kind" Value="VideoOff" />
                                        <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                    </Style>
                                </icons:MaterialIcon.Styles>
                            </icons:MaterialIcon>
                        </Grid>

                        <StackPanel IsVisible="{Binding IsConnected}" Spacing="8">

                            <!--  Camera Status  -->
                            <controls:StatusLabel
                                Title="Status"
                                IsActive="{Binding IsCameraStreaming}"
                                Value="{Binding IsCameraStreaming, Converter={x:Static converters:BoolConverters.BoolToStreamingStatusConverter}}" />

                            <!--  Camera FPS  -->
                            <controls:StatusLabel
                                Title="FPS"
                                IsMonoFont="True"
                                Value="{Binding CameraFps, StringFormat='{}{0:F1}', FallbackValue='0.0'}" />

                            <!--  Start/Stop Camera Button  -->
                            <Button
                                Margin="0,2,0,0"
                                HorizontalAlignment="Right"
                                Classes="theme-soft success"
                                Command="{Binding StartCameraStreamCommand}"
                                IsEnabled="{Binding IsConnected}"
                                IsVisible="{Binding !IsCameraStreaming}">
                                <StackPanel Orientation="Horizontal" Spacing="6">
                                    <icons:MaterialIcon
                                        Width="16"
                                        Height="16"
                                        IsVisible="False"
                                        Kind="VideoOutline" />
                                    <TextBlock Text="Start Camera" />
                                </StackPanel>
                            </Button>

                            <Button
                                Margin="0,2,0,0"
                                HorizontalAlignment="Right"
                                Classes="theme-soft danger"
                                Command="{Binding StopCameraStreamCommand}"
                                IsEnabled="{Binding IsConnected}"
                                IsVisible="{Binding IsCameraStreaming}">
                                <StackPanel Orientation="Horizontal" Spacing="6">
                                    <icons:MaterialIcon
                                        Width="16"
                                        Height="16"
                                        IsVisible="False"
                                        Kind="VideoOffOutline" />
                                    <TextBlock Text="Stop Camera" />
                                </StackPanel>
                            </Button>

                        </StackPanel>

                    </StackPanel>
                </Border>

            </StackPanel>

            <!--  Output Card  -->
            <Border
                Name="OutputCardBorder"
                Grid.Row="1"
                Grid.Column="0"
                Margin="0,0,12,0"
                VerticalAlignment="Bottom"
                Background="#50000000"
                Classes="card">

                <StackPanel Spacing="8">
                    <Grid Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            FontSize="14"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource TextBrush}"
                            Text="Output" />

                        <!--  Clear Button  -->
                        <Button
                            Grid.Column="1"
                            Margin="-8,-4"
                            Padding="4,2,4,1"
                            Classes="theme-subtle"
                            Command="{Binding ClearLogOutputCommand}"
                            IsEnabled="{Binding IsConnected}"
                            Opacity="0.5"
                            ToolTip.Tip="Clear output">
                            <Button.Styles>
                                <Style Selector="Button">
                                    <Setter Property="IsVisible" Value="False" />
                                </Style>
                                <Style Selector="Border#OutputCardBorder:pointerover Button">
                                    <Setter Property="IsVisible" Value="True" />
                                </Style>
                            </Button.Styles>
                            <icons:MaterialIcon Kind="Close" />
                        </Button>
                    </Grid>

                    <TextBox
                        MaxHeight="280"
                        Margin="0,0,0,0"
                        Padding="0"
                        Background="Transparent"
                        BorderThickness="0"
                        FontSize="11"
                        IsReadOnly="True"
                        Text="{Binding LogOutput}"
                        TextWrapping="WrapWithOverflow"
                        Watermark="App output will appear here.." />


                </StackPanel>
            </Border>

            <!--  Main/Middle Content  -->
            <Grid
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,0,12,0"
                Background="Transparent">

                <!--  Image display area  -->
                <Border
                    Grid.Column="0"
                    Padding="0"
                    BorderThickness="1"
                    Classes="card">

                    <Border
                        Margin="2"
                        Padding="0"
                        BorderThickness="0"
                        Classes="card"
                        Effect="{x:Null}">
                        <Grid Background="#000000">

                            <!--  Disconnected Card  -->
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                IsVisible="{Binding !IsConnected}">
                                <icons:MaterialIcon
                                    Width="36"
                                    Height="36"
                                    Margin="0,-40,0,4"
                                    Foreground="{StaticResource SubtleTextBrush}"
                                    IsVisible="False"
                                    Kind="LanDisconnect"
                                    Opacity="0.45" />
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    FontSize="18"
                                    FontWeight="SemiBold"
                                    Foreground="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}"
                                    Text="Connection Required" />
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    FontSize="14"
                                    Foreground="{StaticResource SubtleTextBrush}"
                                    Opacity="0.7"
                                    Text="Connect to the demo's RapidServer to view camera feeds" />
                            </StackPanel>

                            <!--  Connected State - Camera Feeds  -->
                            <Grid
                                ClipToBounds="True"
                                ColumnDefinitions="*, Auto, *, Auto, *"
                                Grid.IsSharedSizeScope="True"
                                IsVisible="{Binding IsConnected}">

                                <!--  Responsive/Fixed toggle at top right with black background  -->
                                <Border
                                    Grid.ColumnSpan="5"
                                    Margin="0"
                                    Padding="8"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Background="Transparent"
                                    ZIndex="10">

                                    <StackPanel Orientation="Horizontal" Spacing="4">
                                        <TextBlock
                                            Margin="0,-1,0,0"
                                            FontSize="12"
                                            Foreground="{StaticResource SubtleTextBrush}"
                                            Text="Responsive Size" />
                                        <CheckBox
                                            Classes="theme-solid accent"
                                            IsChecked="{Binding IsCanvasResponsive}"
                                            ToolTip.Tip="Toggle between responsive and fixed canvas size" />
                                    </StackPanel>
                                </Border>

                                <!--  Left spacing column  -->
                                <Border Grid.Column="0" />

                                <!--  render feed (640x480 aspect ratio)  -->
                                <Border
                                    Grid.Column="1"
                                    Margin="8,8,4,8"
                                    Padding="4,0,4,2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="#40555555"
                                    CornerRadius="2">
                                    <Grid>

                                        <Grid RowDefinitions="auto * auto *" RowSpacing="2">

                                            <!--  Header with size info  -->
                                            <Grid Grid.Row="0" ColumnDefinitions="* auto">
                                                <TextBlock
                                                    Grid.Column="0"
                                                    FontWeight="Bold"
                                                    Foreground="#00FF00"
                                                    Text="RENDER FEED" />

                                                <!--  Size information  -->
                                                <TextBlock
                                                    Grid.Column="1"
                                                    VerticalAlignment="Center"
                                                    FontSize="10"
                                                    Foreground="{StaticResource SubtleTextBrush}"
                                                    Opacity="0.8"
                                                    Text="{Binding IsCanvasResponsive, Converter={x:Static converters:BoolConverters.BoolToSizeInfoConverter}}" />
                                            </Grid>

                                            <!--  render canvas with viewbox for scaling  -->
                                            <Viewbox
                                                Grid.Row="1"
                                                Stretch="{Binding IsCanvasResponsive, Converter={x:Static converters:BoolConverters.ResponsiveStretchConverter}}"
                                                StretchDirection="Both">
                                                <Canvas
                                                    Name="RenderCanvas"
                                                    Width="640"
                                                    Height="480"
                                                    Background="#2A2A2A">

                                                    <!--  rendered ball - red ball  -->
                                                    <Ellipse
                                                        Fill="Red"
                                                        Stroke="#000"
                                                        StrokeThickness="1">

                                                        <!--  ellipse size (diameter = radius * 2)  -->
                                                        <Ellipse.Width>
                                                            <Binding
                                                                Converter="{x:Static converters:BoolConverters.RadiusToDiameterConverter}"
                                                                FallbackValue="10"
                                                                Path="Program_BallRadius" />
                                                        </Ellipse.Width>
                                                        <Ellipse.Height>
                                                            <Binding
                                                                Converter="{x:Static converters:BoolConverters.RadiusToDiameterConverter}"
                                                                FallbackValue="10"
                                                                Path="Program_BallRadius" />
                                                        </Ellipse.Height>

                                                        <!--  canvas position (center - radius for top-left positioning)  -->
                                                        <Canvas.Left>
                                                            <MultiBinding Converter="{x:Static converters:BoolConverters.BallPositionToCenterOffsetConverter}">
                                                                <Binding FallbackValue="320" Path="Program_BallX" />
                                                                <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                            </MultiBinding>
                                                        </Canvas.Left>
                                                        <Canvas.Top>
                                                            <MultiBinding Converter="{x:Static converters:BoolConverters.BallYPositionToCenterOffsetConverter}">
                                                                <Binding FallbackValue="240" Path="Program_BallY" />
                                                                <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                            </MultiBinding>
                                                        </Canvas.Top>
                                                    </Ellipse>

                                                    <!--  Center crosshair  -->
                                                    <Line
                                                        Stroke="#333333"
                                                        StrokeDashArray="5,5"
                                                        StrokeThickness="1"
                                                        StartPoint="0,240"
                                                        EndPoint="640,240" />
                                                    <Line
                                                        Stroke="#333333"
                                                        StrokeDashArray="5,5"
                                                        StrokeThickness="1"
                                                        StartPoint="320,0"
                                                        EndPoint="320,480" />

                                                </Canvas>
                                            </Viewbox>

                                            <StackPanel
                                                Grid.Row="2"
                                                Margin="0,2,0,0"
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    MinWidth="80"
                                                    Classes="Mono"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding Program_BallX, StringFormat='{}X: {0:F0}'}" />
                                                <TextBlock
                                                    MinWidth="80"
                                                    Classes="Mono"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding Program_BallY, StringFormat='{}Y: {0:F0}'}" />
                                                <TextBlock
                                                    MinWidth="80"
                                                    Classes="Mono"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding Program_BallRadius, StringFormat='{}Radius: {0:F0}'}" />
                                            </StackPanel>

                                        </Grid>

                                    </Grid>
                                </Border>

                                <!--  Middle spacing column  -->
                                <Border Grid.Column="2" />

                                <!--  camera feed (640x480 aspect ratio)  -->
                                <Border
                                    Grid.Column="3"
                                    Margin="4,8,8,8"
                                    Padding="4,0,4,2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="#40555555"
                                    CornerRadius="2">
                                    <Grid>

                                        <Grid RowDefinitions="auto * auto *" RowSpacing="2">

                                            <!--  Header with size info  -->
                                            <Grid Grid.Row="0" ColumnDefinitions="* auto">
                                                <TextBlock
                                                    Grid.Column="0"
                                                    FontWeight="Bold"
                                                    Foreground="#0080FF"
                                                    Text="CAMERA FEED" />

                                                <!--  Size information  -->
                                                <TextBlock
                                                    Grid.Column="1"
                                                    VerticalAlignment="Center"
                                                    FontSize="10"
                                                    Foreground="{StaticResource SubtleTextBrush}"
                                                    Opacity="0.8"
                                                    Text="{Binding IsCanvasResponsive, Converter={x:Static converters:BoolConverters.BoolToSizeInfoConverter}}" />
                                            </Grid>

                                            <!--  camera canvas with viewbox for scaling  -->
                                            <Viewbox
                                                Grid.Row="1"
                                                Stretch="{Binding IsCanvasResponsive, Converter={x:Static converters:BoolConverters.ResponsiveStretchConverter}}"
                                                StretchDirection="Both">
                                                <Canvas
                                                    Name="CameraCanvas"
                                                    Width="640"
                                                    Height="480"
                                                    Background="#1A1A1A">

                                                    <!--  Camera Image Display  -->
                                                    <Image
                                                        Name="CameraImage"
                                                        Canvas.Left="0"
                                                        Canvas.Top="0"
                                                        Width="640"
                                                        Height="480"
                                                        Source="{Binding CameraImage}"
                                                        Stretch="UniformToFill" />

                                                    <!--  Ball Detection Overlay - only when ball is detected  -->
                                                    <Ellipse
                                                        Fill="Transparent"
                                                        IsVisible="{Binding Program_BallRadius, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                        Stroke="Lime"
                                                        StrokeThickness="1">

                                                        <!--  ellipse size (diameter = radius * 2)  -->
                                                        <Ellipse.Width>
                                                            <Binding
                                                                Converter="{x:Static converters:BoolConverters.RadiusToDiameterConverter}"
                                                                FallbackValue="10"
                                                                Path="Program_BallRadius" />
                                                        </Ellipse.Width>
                                                        <Ellipse.Height>
                                                            <Binding
                                                                Converter="{x:Static converters:BoolConverters.RadiusToDiameterConverter}"
                                                                FallbackValue="10"
                                                                Path="Program_BallRadius" />
                                                        </Ellipse.Height>

                                                        <!--  canvas position (center - radius for top-left positioning)  -->
                                                        <Canvas.Left>
                                                            <MultiBinding Converter="{x:Static converters:BoolConverters.BallPositionToCenterOffsetConverter}">
                                                                <Binding FallbackValue="320" Path="Program_BallX" />
                                                                <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                            </MultiBinding>
                                                        </Canvas.Left>
                                                        <Canvas.Top>
                                                            <MultiBinding Converter="{x:Static converters:BoolConverters.BallYPositionToCenterOffsetConverter}">
                                                                <Binding FallbackValue="240" Path="Program_BallY" />
                                                                <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                            </MultiBinding>
                                                        </Canvas.Top>
                                                    </Ellipse>

                                                    <!--  Placeholder when no camera feed  -->
                                                    <Rectangle
                                                        Width="640"
                                                        Height="480"
                                                        Fill="#222222"
                                                        IsVisible="{Binding CameraImage, Converter={x:Static ObjectConverters.IsNull}}"
                                                        Stroke="#80444444"
                                                        StrokeThickness="1" />

                                                    <!--  Placeholder text when no camera feed  -->
                                                    <TextBlock
                                                        Canvas.Left="320"
                                                        Canvas.Top="235"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        FontSize="16"
                                                        Foreground="{StaticResource SubtleTextBrush}"
                                                        IsVisible="{Binding CameraImage, Converter={x:Static ObjectConverters.IsNull}}"
                                                        Opacity="0.6"
                                                        Text="NO CAMERA FEED"
                                                        TextAlignment="Center">
                                                        <TextBlock.RenderTransform>
                                                            <TranslateTransform X="-70" Y="-8" />
                                                        </TextBlock.RenderTransform>
                                                    </TextBlock>

                                                    <!--  Center crosshair - shown when no camera feed  -->
                                                    <Line
                                                        IsVisible="{Binding CameraImage, Converter={x:Static ObjectConverters.IsNull}}"
                                                        Stroke="#80444444"
                                                        StrokeDashArray="5,5"
                                                        StrokeThickness="1"
                                                        StartPoint="0,240"
                                                        EndPoint="640,240" />
                                                    <Line
                                                        IsVisible="{Binding CameraImage, Converter={x:Static ObjectConverters.IsNull}}"
                                                        Stroke="#80444444"
                                                        StrokeDashArray="5,5"
                                                        StrokeThickness="1"
                                                        StartPoint="320,0"
                                                        EndPoint="320,480" />

                                                </Canvas>
                                            </Viewbox>

                                            <StackPanel
                                                Grid.Row="2"
                                                Margin="0,2,0,0"
                                                Orientation="Horizontal">

                                                <TextBlock
                                                    MinWidth="80"
                                                    Classes="Mono "
                                                    Foreground="{StaticResource TextBrush}">
                                                    <Run Text="Live:" />
                                                    <Run Text="{Binding IsCameraStreaming, Converter={x:Static converters:BoolConverters.BoolToYesNoConverter}}" />
                                                </TextBlock>

                                                <TextBlock
                                                    MinWidth="80"
                                                    Classes="Mono"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding CameraFps, FallbackValue=0, StringFormat='FPS: {0:F1}'}" />

                                                <TextBlock
                                                    MinWidth="80"
                                                    Classes="Mono"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding CameraFrameCount, FallbackValue='-', StringFormat='Frames: {0}'}" />

                                            </StackPanel>

                                        </Grid>

                                    </Grid>
                                </Border>

                                <!--  Right spacing column  -->
                                <Border Grid.Column="4" />

                            </Grid>
                        </Grid>
                    </Border>

                </Border>
            </Grid>

            <!--  Right sidebar - stacked cards  -->
            <ScrollViewer Grid.Row="1" Grid.Column="2">
                <StackPanel
                    Margin="0"
                    VerticalAlignment="Top"
                    Spacing="12">

                    <!--  Server Card  -->
                    <Border Classes="card">
                        <StackPanel IsEnabled="{Binding IsConnected}">

                            <TextBlock
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource TextBrush}"
                                Text="RMP Status" />

                            <StackPanel
                                Margin="0,12,0,0"
                                IsVisible="{Binding IsConnected}"
                                Spacing="12">

                                <!--  controller  -->
                                <controls:StatusLabel
                                    Title="Controller"
                                    IsActive="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    TitleOpacity="1">
                                    <controls:StatusLabel.Styles>
                                        <Style Selector="controls|StatusLabel[IsActive=true]">
                                            <Setter Property="Value" Value="Created" />
                                        </Style>
                                        <Style Selector="controls|StatusLabel[IsActive=false]">
                                            <Setter Property="Value" Value="Not created" />
                                        </Style>
                                    </controls:StatusLabel.Styles>
                                </controls:StatusLabel>

                                <controls:StatusLabel
                                    Title="Counter"
                                    Margin="0,-10,0,0"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsMonoFont="True"
                                    Value="{Binding ControllerStatus.SampleCounter, FallbackValue='-', StringFormat=N0}" />

                                <!--  network  -->
                                <controls:StatusLabel
                                    Title="EtherCAT Network"
                                    IsActive="{Binding NetworkStatus.State, Converter={x:Static converters:BoolConverters.StringEqualsParameterConverter}, ConverterParameter='Operational', FallbackValue=False}"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    TitleOpacity="1"
                                    Value="{Binding NetworkStatus.State, FallbackValue='-'}" />

                                <controls:StatusLabel
                                    Title="Counter"
                                    Margin="0,-10,0,0"
                                    IsEnabled="{Binding NetworkStatus.State, Converter={x:Static converters:BoolConverters.StringEqualsParameterConverter}, ConverterParameter='Operational', FallbackValue=False}"
                                    IsMonoFont="True"
                                    IsValueVisible="{Binding $self.IsEnabled}"
                                    Value="{Binding NetworkStatus.Counter, FallbackValue='-', StringFormat=N0}" />

                                <!--  taskmanager  -->
                                <controls:StatusLabel
                                    Title="TaskManager"
                                    IsActive="{Binding TaskManagerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsValueVisible="{Binding $self.IsEnabled}"
                                    TitleOpacity="1"
                                    Value="{Binding TaskManagerStatus.State, FallbackValue='-'}" />

                                <ItemsControl
                                    Margin="0,-10,0,0"
                                    HorizontalAlignment="Stretch"
                                    FontSize="12"
                                    ItemsSource="{Binding GlobalValues}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2,0,0" ColumnDefinitions="*,auto">
                                                <TextBlock Opacity="60" Text="{Binding Name}" />

                                                <!--  numeric  -->
                                                <TextBlock
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Bottom"
                                                    Classes="Mono"
                                                    IsVisible="{Binding IsNumeric}"
                                                    Text="{Binding Value}" />

                                                <!--  bool  -->
                                                <icons:MaterialIcon
                                                    Grid.Column="1"
                                                    Width="14"
                                                    Height="14"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Bottom"
                                                    Classes.is-false="{Binding Value, Converter={x:Static converters:BoolConverters.StringToNotBoolConverter}}"
                                                    Classes.is-true="{Binding Value, Converter={x:Static converters:BoolConverters.StringToBoolConverter}}"
                                                    IsVisible="{Binding !IsNumeric}">
                                                    <icons:MaterialIcon.Styles>

                                                        <Style Selector="icons|MaterialIcon.is-true">
                                                            <Setter Property="Kind" Value="CheckBold" />
                                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                                            <Setter Property="Margin" Value="0 0 -1 2" />
                                                        </Style>

                                                        <Style Selector="icons|MaterialIcon.is-false">
                                                            <Setter Property="Kind" Value="CloseBold" />
                                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                                            <Setter Property="Margin" Value="0 0 -2 2" />
                                                        </Style>

                                                    </icons:MaterialIcon.Styles>
                                                </icons:MaterialIcon>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <controls:StatusLabel
                                    Title="Tasks"
                                    Margin="0,0,0,0"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsMonoFont="True"
                                    IsValueVisible="{Binding $self.IsEnabled}"
                                    TitleOpacity="1"
                                    Value="{Binding TaskManagerStatus.TaskIds.Count, FallbackValue='-'}" />

                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!--  Program Card  -->
                    <Border Classes="card" IsEnabled="{Binding IsConnected}">
                        <Border.Styles>

                            <Style Selector="icons|MaterialIcon">
                                <Setter Property="Margin" Value="0 0 0 -2" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>

                            <Style Selector="icons|MaterialIcon[Tag=True]">
                                <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                <Setter Property="Kind" Value="Link" />
                                <Setter Property="ToolTip.Tip" Value="Linked to a global" />
                                <Setter Property="ToolTip.ShowDelay" Value="0" />
                            </Style>

                            <Style Selector="icons|MaterialIcon[Tag=False]">
                                <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                <Setter Property="Kind" Value="LinkOff" />
                                <Setter Property="ToolTip.Tip" Value="Not linked to a global" />
                                <Setter Property="ToolTip.ShowDelay" Value="0" />
                            </Style>

                            <Style Selector="AutoCompleteBox">
                                <Setter Property="Margin" Value="0 0 0 -1" />
                                <Setter Property="MinWidth" Value="120" />
                                <Setter Property="Padding" Value="2" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                                <Setter Property="FilterMode" Value="ContainsOrdinal" />
                                <Setter Property="MinimumPopulateDelay" Value="0" />
                                <Setter Property="MinimumPrefixLength" Value="0" />
                                <Setter Property="Watermark" Value="Select global.." />
                                <Setter Property="behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick" Value="True" />
                            </Style>

                            <Style Selector="controls|StatusLabel[IsActive=true]">
                                <!--<Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                <Setter Property="TitleOpacity" Value="1" />
                                <Setter Property="FontWeight" Value="Medium" />-->
                            </Style>

                            <Style Selector="controls|StatusLabel[IsActive=false]">
                                <!--  <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" /> -->
                                <Setter Property="TitleOpacity" Value="0.6" />
                            </Style>

                        </Border.Styles>

                        <Grid>
                            <!--  Main content  -->
                            <StackPanel>
                                <TextBlock
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource TextBrush}"
                                    Text="Mappings" />

                                <StackPanel
                                    Margin="0,12,0,0"
                                    IsVisible="{Binding IsConnected}"
                                    Spacing="6">

                                    <!--  ball x  -->
                                    <DockPanel LastChildFill="True">
                                        <controls:StatusLabel Title="Ball Center X" IsActive="{Binding Global_BallXValid}" />

                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            Spacing="8">

                                            <AutoCompleteBox
                                                behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                                Classes="theme-soft"
                                                ItemsSource="{Binding GlobalValues}"
                                                Text="{Binding Global_BallX}"
                                                ValueMemberBinding="{Binding Name}">
                                                <AutoCompleteBox.InnerRightContent>
                                                    <icons:MaterialIcon Tag="{Binding Global_BallXValid}" />
                                                </AutoCompleteBox.InnerRightContent>
                                            </AutoCompleteBox>

                                        </StackPanel>
                                    </DockPanel>

                                    <!--  ball y  -->
                                    <DockPanel LastChildFill="True">
                                        <controls:StatusLabel Title="Ball Center Y" IsActive="{Binding Global_BallYValid}" />

                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            Spacing="8">

                                            <AutoCompleteBox
                                                behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                                Classes="theme-soft"
                                                ItemsSource="{Binding GlobalValues}"
                                                Text="{Binding Global_BallY}"
                                                ValueMemberBinding="{Binding Name}">
                                                <AutoCompleteBox.InnerRightContent>
                                                    <icons:MaterialIcon Tag="{Binding Global_BallYValid}" />
                                                </AutoCompleteBox.InnerRightContent>
                                            </AutoCompleteBox>

                                        </StackPanel>
                                    </DockPanel>

                                    <!--  ball radius  -->
                                    <DockPanel LastChildFill="True">
                                        <controls:StatusLabel Title="Ball Radius" IsActive="{Binding Global_BallRadiusValid}" />

                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            Spacing="8">

                                            <AutoCompleteBox
                                                behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                                Classes="theme-soft"
                                                ItemsSource="{Binding GlobalValues}"
                                                Text="{Binding Global_BallRadius}"
                                                ValueMemberBinding="{Binding Name}">
                                                <AutoCompleteBox.InnerRightContent>
                                                    <icons:MaterialIcon Tag="{Binding Global_BallRadiusValid}" />
                                                </AutoCompleteBox.InnerRightContent>
                                            </AutoCompleteBox>

                                        </StackPanel>
                                    </DockPanel>

                                    <!--  is motion enabled  -->
                                    <DockPanel LastChildFill="True">
                                        <controls:StatusLabel Title="Is Motion Enabled" IsActive="{Binding Global_IsMotionEnabledValid}" />

                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            Spacing="8">

                                            <AutoCompleteBox
                                                behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                                Classes="theme-soft"
                                                ItemsSource="{Binding GlobalValues}"
                                                Text="{Binding Global_IsMotionEnabled}"
                                                ValueMemberBinding="{Binding Name}">
                                                <AutoCompleteBox.InnerRightContent>
                                                    <icons:MaterialIcon Tag="{Binding Global_IsMotionEnabledValid}" />
                                                </AutoCompleteBox.InnerRightContent>
                                            </AutoCompleteBox>

                                        </StackPanel>
                                    </DockPanel>

                                </StackPanel>
                            </StackPanel>


                        </Grid>
                    </Border>

                </StackPanel>
            </ScrollViewer>

        </Grid>

    </ContentControl>
</UserControl>
