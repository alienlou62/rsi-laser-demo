<UserControl
    x:Class="RapidLaser.Views.MainView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
    xmlns:behaviors="using:RapidLaser.Behaviors"
    xmlns:controls="using:RapidLaser.Controls"
    xmlns:converters="using:RapidLaser.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:icons="using:Material.Icons.Avalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:RapidLaser.ViewModels"
    d:DesignHeight="1000"
    d:DesignWidth="1500"
    x:DataType="vm:MainViewModel"
    mc:Ignorable="d">
    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>

    <ContentControl Classes.is-connected="{Binding IsConnected, Mode=TwoWay}" Classes.is-connected-n="{Binding !IsConnected, Mode=TwoWay}">

        <Grid Margin="12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="280" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Top bar card with drag region  -->
            <Border
                Classes="card"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="0,0,0,12"
                Padding="5,7"
                PointerPressed="OnTitleBarPointerPressed">

                <Grid Margin="6,0,0,0">

                    <!--  Left side content  -->
                    <StackPanel
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="16">
                        <icons:MaterialIcon
                            Width="25"
                            Height="25"
                            Margin="0,0,-10,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource TextBrush}"
                            Kind="MotionOutline" />
                        <TextBlock
                            Margin="0,-1,0,0"
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource TextBrush}"
                            Text="RapidLaser" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="14"
                            Foreground="{StaticResource SubtleTextBrush}"
                            Text="Real-time Laser Ball Tracker" />
                    </StackPanel>

                    <!--  Center drag area  -->
                    <Border
                        Margin="200,0,200,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="Transparent" />

                    <!--  Right side content with status and custom window controls  -->
                    <StackPanel
                        Margin="0,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="12">

                        <!--  System Status Indicator  -->
                        <!--<TextBlock
                            Classes="status-text status-active"
                            FontWeight="SemiBold"
                            Text="{Binding ProgramStatus}" />-->

                        <!--  FPS Counter  -->
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="12"
                            Foreground="{StaticResource SubtleTextBrush}"
                            IsVisible="False"
                            Text="30 FPS" />

                        <!--  Custom Window Controls  -->
                        <StackPanel
                            Margin="16,0,0,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="0">

                            <!--  Minimize Button  -->
                            <Button
                                Name="MinimizeButton"
                                Classes="theme-subtle shadowless"
                                Width="32"
                                Height="32"
                                Padding="6"
                                VerticalAlignment="Center"
                                Command="{Binding MinimizeWindowCommand}"
                                Foreground="{StaticResource SubtleTextBrush}">
                                <Button.Content>
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,0 L 8,0"
                                        Stroke="{Binding $parent[Button].Foreground}"
                                        StrokeThickness="1" />
                                </Button.Content>
                            </Button>

                            <!--  Maximize/Restore Button  -->
                            <Button
                                Name="MaximizeButton"
                                Classes="theme-subtle shadowless"
                                Width="32"
                                Height="32"
                                Padding="6"
                                VerticalAlignment="Center"
                                Command="{Binding MaximizeWindowCommand}"
                                Foreground="{StaticResource SubtleTextBrush}">
                                <Button.Content>
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,0 L 8,0 L 8,8 L 0,8 Z"
                                        Fill="Transparent"
                                        Stroke="{Binding $parent[Button].Foreground}"
                                        StrokeThickness="1" />
                                </Button.Content>
                            </Button>

                            <!--  Close Button  -->
                            <Button
                                Name="CloseButton"
                                Classes="theme-subtle shadowless"
                                Width="32"
                                Height="32"
                                Padding="6"
                                VerticalAlignment="Center"
                                Command="{Binding CloseWindowCommand}"
                                Foreground="{StaticResource SubtleTextBrush}">
                                <Button.Content>
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,0 L 8,8 M 8,0 L 0,8"
                                        Stroke="{Binding $parent[Button].Foreground}"
                                        StrokeThickness="1" />
                                </Button.Content>
                                <Button.Styles>
                                    <Style Selector="Button:pointerover">
                                        <Setter Property="Foreground" Value="#E81123" />
                                    </Style>
                                </Button.Styles>
                            </Button>

                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>

            <!--  Left sidebar - stacked cards  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="0"
                Margin="0,0,12,0"
                VerticalAlignment="Top"
                Spacing="12">

                <!--  gRPC Connection Card  -->
                <Border Classes="card" ClipToBounds="True">

                    <Grid>
                        <!--  Subtle gradient overlay  -->
                        <actipro:MeshGradientPresenter Margin="-12" IsVisible="{Binding IsConnected}">
                            <actipro:MeshGradientPresenter.Styles>
                                <Style Selector="actipro|MeshGradientPresenter">
                                    <Style.Animations>
                                        <Animation IterationCount="INFINITE" Duration="0:0:3">
                                            <KeyFrame Cue="0%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                            <KeyFrame Cue="50%">
                                                <Setter Property="Opacity" Value="0.3" />
                                            </KeyFrame>
                                            <KeyFrame Cue="100%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                        </Animation>
                                    </Style.Animations>
                                </Style>
                            </actipro:MeshGradientPresenter.Styles>
                            <actipro:MeshGradientNode Center="100%, 0%" Color="#304CAF50" />
                            <actipro:MeshGradientNode Center="0%, 100%" Color="#00000000" />
                        </actipro:MeshGradientPresenter>

                        <actipro:MeshGradientPresenter Margin="-12" IsVisible="{Binding !IsConnected}">
                            <actipro:MeshGradientPresenter.Styles>
                                <Style Selector="actipro|MeshGradientPresenter">
                                    <Style.Animations>
                                        <Animation IterationCount="INFINITE" Duration="0:0:3">
                                            <KeyFrame Cue="0%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                            <KeyFrame Cue="50%">
                                                <Setter Property="Opacity" Value="0.3" />
                                            </KeyFrame>
                                            <KeyFrame Cue="100%">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </KeyFrame>
                                        </Animation>
                                    </Style.Animations>
                                </Style>
                            </actipro:MeshGradientPresenter.Styles>
                            <actipro:MeshGradientNode Center="100%, 0%" Color="#30F44336" />
                            <actipro:MeshGradientNode Center="0%, 100%" Color="#00000000" />
                        </actipro:MeshGradientPresenter>

                        <StackPanel>
                            <Grid Margin="0,0,0,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource TextBrush}"
                                    Text="RapidServer" />

                                <icons:MaterialIcon
                                    Grid.Column="1"
                                    Width="18"
                                    Height="18"
                                    VerticalAlignment="Center">
                                    <icons:MaterialIcon.Styles>
                                        <Style Selector="ContentControl.is-connected icons|MaterialIcon">
                                            <Setter Property="Kind" Value="LanCheck" />
                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                        </Style>
                                        <Style Selector="ContentControl:not(.is-connected) icons|MaterialIcon">
                                            <Setter Property="Kind" Value="LanDisconnect" />
                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                        </Style>
                                    </icons:MaterialIcon.Styles>
                                </icons:MaterialIcon>
                            </Grid>

                            <!--  Server Configuration (disabled when using mock or when connected)  -->
                            <StackPanel Spacing="8">
                                <!-- <StackPanel.Styles>
                                    <Style Selector="ContentControl.is-connected controls|LabeledControl TextPresenter">
                                        <Setter Property="TextElement.Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccessPressed}" />
                                    </Style>
                                </StackPanel.Styles>-->

                                <!--  IP Address  -->
                                <controls:LabeledControl
                                    IsEnabled="{Binding !IsConnected}"
                                    Label="IP Address"
                                    LabelWidth="60">
                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        Text="{Binding IpAddress}"
                                        ToolTip.Tip="IP Address" />
                                </controls:LabeledControl>

                                <!--  Port  -->
                                <controls:LabeledControl
                                    IsEnabled="{Binding !IsConnected}"
                                    Label="Port"
                                    LabelWidth="60">
                                    <TextBox
                                        HorizontalAlignment="Stretch"
                                        Text="{Binding Port}"
                                        ToolTip.Tip="Port" />
                                </controls:LabeledControl>

                                <!--  Connection Buttons  -->
                                <Button
                                    Classes="theme-soft success"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Right"
                                    Command="{Binding ConnectCommand}"
                                    Content="Connect"
                                    IsEnabled="{Binding !IsConnecting}"
                                    IsVisible="{Binding !IsConnected}" />

                                <!--  Mock Service Toggle  -->
                                <controls:LabeledControl
                                    IsVisible="False"
                                    Label="Use Mock Server"
                                    LabelWidth="45">
                                    <CheckBox Classes="size-xs" IsChecked="{Binding UseMockService}" />
                                </controls:LabeledControl>
                            </StackPanel>

                            <Button
                                Classes="theme-soft danger"
                                Margin="0,10,0,0"
                                HorizontalAlignment="Right"
                                Command="{Binding DisconnectCommand}"
                                Content="Disconnect"
                                FontSize="12"
                                IsVisible="{Binding IsConnected}" />


                            <!--  Error Display  -->
                            <TextBlock
                                Margin="0,8,0,0"
                                Foreground="#F44336"
                                IsVisible="{Binding LastError, Converter={x:Static converters:BoolConverters.StringNotEmptyToBoolConverter}}"
                                Text="{Binding LastError}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </Grid>
                </Border>

                <!--  Actions Card  -->
                <Border
                    Classes="card"
                    ClipToBounds="True"
                    IsEnabled="{Binding IsConnected}">

                    <Grid>
                        <!--  Mesh gradient overlay for program running state  -->
                        <actipro:MeshGradientPresenter Margin="-12" IsVisible="{Binding IsProgramRunning}">
                            <actipro:MeshGradientNode Center="100%, 0%" Color="#304CAF50" />
                            <actipro:MeshGradientNode Center="0%, 100%" Color="#00000000" />
                        </actipro:MeshGradientPresenter>

                        <StackPanel Spacing="8">
                            <!--  Program Control Header with Progress Ring  -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource TextBrush}"
                                    Text="Program" />

                                <!--  Spinning icon when program is running  -->
                                <Border
                                    Grid.Column="1"
                                    Width="20"
                                    Height="20"
                                    Background="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}"
                                    CornerRadius="10"
                                    IsVisible="{Binding IsProgramRunning}">
                                    <Border.Child>
                                        <icons:MaterialIcon
                                            Width="12"
                                            Height="12"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="White"
                                            Kind="Sync" />
                                    </Border.Child>
                                    <Border.Styles>
                                        <Style Selector="Border">
                                            <Style.Animations>
                                                <Animation IterationCount="INFINITE" Duration="0:0:1">
                                                    <KeyFrame Cue="0%">
                                                        <Setter Property="Opacity" Value="0.3" />
                                                    </KeyFrame>
                                                    <KeyFrame Cue="50%">
                                                        <Setter Property="Opacity" Value="1.0" />
                                                    </KeyFrame>
                                                    <KeyFrame Cue="100%">
                                                        <Setter Property="Opacity" Value="0.3" />
                                                    </KeyFrame>
                                                </Animation>
                                            </Style.Animations>
                                        </Style>
                                    </Border.Styles>
                                </Border>

                            </Grid>

                            <!--  Control Buttons  -->
                            <UniformGrid
                                Margin="0,8,0,0"
                                ColumnSpacing="8"
                                Columns="3"
                                IsVisible="{Binding IsConnected}">

                                <!--  start  -->
                                <Button
                                    Classes="theme-soft success"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding StartTasksCommand}"
                                    IsVisible="{Binding !IsProgramRunning}"
                                    ToolTip.Tip="{Binding SshRunCommand}">
                                    <icons:MaterialIcon Kind="Play" />
                                </Button>

                                <!--  kill  -->
                                <Button
                                    Classes="theme-soft danger"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding ShutdownTasksCommand}"
                                    IsVisible="{Binding IsProgramRunning}">
                                    <icons:MaterialIcon Kind="Skull" />
                                </Button>

                                <Panel IsVisible="{Binding IsProgramRunning}">

                                    <!--  pause  -->
                                    <Button
                                        Classes="theme-soft accent"
                                        HorizontalAlignment="Stretch"
                                        Command="{Binding ToggleMotionPauseCommand}"
                                        IsVisible="{Binding !IsProgramPaused}">
                                        <icons:MaterialIcon Kind="Pause" />
                                    </Button>

                                    <!--  resume  -->
                                    <Button
                                        Classes="theme-soft success"
                                        HorizontalAlignment="Stretch"
                                        Command="{Binding ToggleMotionPauseCommand}"
                                        IsVisible="{Binding IsProgramPaused}">
                                        <icons:MaterialIcon Kind="PlayOutline" />
                                    </Button>

                                </Panel>

                            </UniformGrid>

                            <TextBlock
                                Classes="danger"
                                IsVisible="{Binding ProgramStatus, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                Text="{Binding ProgramStatus}" />
                        </StackPanel>
                    </Grid>
                </Border>

                <!--  SSH Card  -->
                <Border Classes="card" IsEnabled="{Binding IsConnected}">

                    <StackPanel Spacing="8">
                        <TextBlock
                            FontSize="14"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource TextBrush}"
                            Text="SSH" />


                        <StackPanel IsVisible="{Binding IsConnected}" Spacing="8">
                            <!-- <StackPanel.Styles>
                                    <Style Selector="ContentControl.is-connected controls|LabeledControl TextPresenter">
                                        <Setter Property="TextElement.Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccessPressed}" />
                                    </Style>
                                </StackPanel.Styles>-->

                            <!--  usernmae  -->
                            <controls:LabeledControl
                                IsEnabled="{Binding IsConnected}"
                                Label="Username"
                                LabelWidth="60">
                                <TextBox HorizontalAlignment="Stretch" Text="{Binding SshUser}" />
                            </controls:LabeledControl>

                            <!--  password  -->
                            <controls:LabeledControl
                                IsEnabled="{Binding IsConnected}"
                                Label="Password"
                                LabelWidth="60">
                                <TextBox HorizontalAlignment="Stretch" Text="{Binding SshPassword}" />
                            </controls:LabeledControl>

                            <controls:LabeledControl IsEnabled="{Binding IsConnected}" Label="Command" />

                            <!--  Command Input  -->
                            <TextBox
                                Margin="0,-4,0,0"
                                HorizontalAlignment="Stretch"
                                IsEnabled="{Binding !IsSshCommandRunning}"
                                Text="{Binding SshCommand}"
                                TextWrapping="Wrap"
                                ToolTip.ShowDelay="0"
                                ToolTip.Tip="Send SSH command"
                                Watermark="Enter SSH command..">
                                <TextBox.KeyBindings>
                                    <KeyBinding Command="{Binding RunSshCommandCommand}" Gesture="Enter" />
                                </TextBox.KeyBindings>
                                <TextBox.InnerRightContent>
                                    <!--  Execute Button  -->
                                    <Button
                                        Classes="theme-subtle"
                                        Grid.Column="1"
                                        Margin="4,3,3,0"
                                        Padding="2"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Command="{Binding RunSshCommandCommand}"
                                        IsEnabled="{Binding !IsSshCommandRunning}">
                                        <Button.Styles>
                                            <!--  Default faded state  -->
                                            <Style Selector="Button">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </Style>
                                            <!--  Show when parent TextBox is focused  -->
                                            <Style Selector="TextBox:focus Button, TextBox:pointerover Button, Button:pointerover">
                                                <Setter Property="Opacity" Value="1.0" />
                                            </Style>
                                        </Button.Styles>
                                        <icons:MaterialIcon Kind="Terminal" />
                                    </Button>
                                </TextBox.InnerRightContent>
                            </TextBox>

                            <!--  Grouped Card  -->
                            <Border Classes="grouped-card">

                                <StackPanel Spacing="8">
                                    <!--  Status and Clear Button Row  -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Status  -->
                                        <TextBlock
                                            Grid.Column="0"
                                            FontSize="12"
                                            Foreground="{StaticResource TextBrush}"
                                            Text="{Binding SshStatus}"
                                            TextWrapping="Wrap" />

                                        <!--  Clear Button  -->
                                        <Button
                                            Classes="theme-subtle"
                                            Grid.Column="1"
                                            Margin="-8,-4"
                                            Padding="4,2,4,1"
                                            Command="{Binding ClearSshOutputCommand}"
                                            IsEnabled="{Binding IsConnected}"
                                            Opacity="0.5"
                                            ToolTip.Tip="Clear output">
                                            <icons:MaterialIcon Kind="Close" />
                                        </Button>
                                    </Grid>

                                    <!--  Output  -->
                                    <TextBox
                                        MaxHeight="280"
                                        Margin="0,0,-12,0"
                                        Padding="0"
                                        AcceptsReturn="True"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        FontFamily="Consolas, 'Courier New', monospace"
                                        FontSize="11"
                                        IsReadOnly="True"
                                        Text="{Binding SshOutput}"
                                        TextWrapping="WrapWithOverflow"
                                        Watermark="Command output will appear here..." />
                                </StackPanel>
                            </Border>
                        </StackPanel>


                    </StackPanel>
                </Border>

                <!--  Status Card  -->
                <Border Classes="card" IsVisible="False">
                    <StackPanel>
                        <TextBlock
                            Margin="0,0,0,12"
                            FontSize="14"
                            FontWeight="SemiBold"
                            Foreground="{StaticResource TextBrush}"
                            Text="Task Status" />
                        <StackPanel Spacing="8">
                            <controls:StatusLabel
                                Title="RT Task Manager"
                                IsActive="True"
                                Value="Running" />
                            <controls:StatusLabel
                                Title="Ball Detection Task"
                                IsActive="True"
                                Value="Active" />
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--  Main content area - no card wrapper  -->
            <Grid
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,0,12,0"
                Background="Transparent">

                <!--  Image display area  -->
                <Border
                    Classes="card"
                    Grid.Column="0"
                    Background="#000000"
                    BorderThickness="2">

                    <!-- <Border
                    Grid.Column="0"
                    Background="#000000"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="2"
                    CornerRadius="{StaticResource StandardCornerRadius}">-->

                    <Grid>
                        <!--  Disconnected State Message  -->
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            IsVisible="{Binding !IsConnected}">
                            <icons:MaterialIcon
                                Width="36"
                                Height="36"
                                Margin="0,-40,0,4"
                                Foreground="{StaticResource SubtleTextBrush}"
                                IsVisible="False"
                                Kind="LanDisconnect"
                                Opacity="0.45" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="18"
                                FontWeight="SemiBold"
                                Foreground="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}"
                                Text="Connection Required" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="14"
                                Foreground="{StaticResource SubtleTextBrush}"
                                Opacity="0.7"
                                Text="Connect to the demo's RapidServer to view camera feeds" />
                        </StackPanel>

                        <!--  Connected State - Camera Feeds  -->
                        <Grid ColumnDefinitions="*" IsVisible="{Binding IsConnected}">

                            <!--  Camera feed placeholder (640x480 aspect ratio)  -->
                            <Border Grid.Column="0" Margin="8">
                                <Grid>
                                    <!--  Simulated camera feed background  -->
                                    <Rectangle
                                        Width="640"
                                        Height="480"
                                        Fill="#2A2A2A" />

                                    <!--  Ball detection circle overlay  -->
                                    <Canvas Width="640" Height="480">

                                        <!--  rendred ball - red ball  -->
                                        <Ellipse
                                            Fill="Red"
                                            Stroke="#000"
                                            StrokeThickness="1">
                                            <Ellipse.Resources>
                                                <actipro:MathConverter x:Key="MathConverter" />
                                            </Ellipse.Resources>

                                            <!--  ellipse/all size  -->
                                            <Ellipse.Width>
                                                <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="x * 2">
                                                    <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                </MultiBinding>
                                            </Ellipse.Width>
                                            <Ellipse.Height>
                                                <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="x * 2">
                                                    <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                </MultiBinding>
                                            </Ellipse.Height>

                                            <!--  canvas position  -->
                                            <Canvas.Left>
                                                <MultiBinding Converter="{x:Static converters:BoolConverters.BallPositionToCenterOffsetConverter}">
                                                    <Binding FallbackValue="320" Path="Program_BallX" />
                                                    <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                </MultiBinding>
                                            </Canvas.Left>
                                            <Canvas.Top>
                                                <MultiBinding Converter="{x:Static converters:BoolConverters.BallYPositionToCenterOffsetConverter}">
                                                    <Binding FallbackValue="240" Path="Program_BallY" />
                                                    <Binding FallbackValue="10" Path="Program_BallRadius" />
                                                </MultiBinding>
                                            </Canvas.Top>
                                        </Ellipse>

                                        <!--  Center crosshair  -->
                                        <Line
                                            Stroke="#333333"
                                            StrokeDashArray="5,5"
                                            StrokeThickness="1"
                                            StartPoint="0,240"
                                            EndPoint="640,240" />
                                        <Line
                                            Stroke="#333333"
                                            StrokeDashArray="5,5"
                                            StrokeThickness="1"
                                            StartPoint="320,0"
                                            EndPoint="320,480" />

                                    </Canvas>

                                    <!--  Overlay info  -->
                                    <Border
                                        Margin="12"
                                        Padding="8"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Background="#80000000">
                                        <StackPanel>
                                            <TextBlock
                                                FontSize="12"
                                                FontWeight="Bold"
                                                Foreground="#00FF00"
                                                Text="CAMERA FEED" />
                                            <StackPanel Spacing="0">
                                                <TextBlock
                                                    FontSize="10"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="Ball Coordinates" />
                                                <TextBlock
                                                    FontSize="12"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding Program_BallX, StringFormat='{}X: {0:F0}'}" />
                                                <TextBlock
                                                    FontSize="12"
                                                    Foreground="{StaticResource TextBrush}"
                                                    Text="{Binding Program_BallY, StringFormat='{}Y: {0:F0}'}" />
                                                <TextBlock
                                                    FontSize="12"
                                                    Foreground="{StaticResource TextBrush}"
                                                    IsVisible="False"
                                                    Text="{Binding DetectionConfidence, StringFormat='{}Confidence: {0:F0}%'}" />
                                            </StackPanel>

                                            <!--  Simulation Toggle  -->
                                            <CheckBox
                                                Margin="0,4,0,0"
                                                Content="Simulate"
                                                FontSize="10"
                                                Foreground="{StaticResource TextBrush}"
                                                IsChecked="{Binding IsSimulatingBallPosition}"
                                                IsVisible="{Binding !IsConnected}" />

                                            <!--  Enable Motion  -->
                                            <CheckBox
                                                Classes="size-xs"
                                                Margin="0,4,0,0"
                                                Command="{Binding ToggleProgramMotionEnabledCommand}"
                                                CommandParameter="{Binding $self.IsChecked}"
                                                Content="Enable Motion"
                                                FontSize="12"
                                                Foreground="{StaticResource TextBrush}"
                                                IsChecked="{Binding Program_IsMotionEnabled}"
                                                IsEnabled="{Binding Program_IsMotionEnabled, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </Border>

                            <!--  Image mask placeholder (640x480 aspect ratio, black and white)  -->
                            <Border
                                Grid.Column="1"
                                Margin="0,8,8,8"
                                IsVisible="False">
                                <Grid>
                                    <!--  Simulated image mask  -->
                                    <Rectangle
                                        Width="640"
                                        Height="480"
                                        Fill="#000000" />

                                    <!--  White regions representing detected areas  -->
                                    <Canvas Width="640" Height="480">
                                        <!--  Ball mask region - bound to actual ball position  -->
                                        <Ellipse
                                            Width="40"
                                            Height="40"
                                            Fill="#FFFFFF">
                                            <Canvas.Left>
                                                <MultiBinding Converter="{x:Static converters:BoolConverters.BallPositionToCenterOffsetConverter}">
                                                    <Binding FallbackValue="320" Path="Program_BallX" />
                                                    <Binding FallbackValue="12.5" Path="Program_BallRadius" />
                                                </MultiBinding>
                                            </Canvas.Left>
                                            <Canvas.Top>
                                                <MultiBinding Converter="{x:Static converters:BoolConverters.BallYPositionToCenterOffsetConverter}">
                                                    <Binding FallbackValue="240" Path="Program_BallY" />
                                                    <Binding FallbackValue="12.5" Path="Program_BallRadius" />
                                                </MultiBinding>
                                            </Canvas.Top>
                                        </Ellipse>
                                    </Canvas>

                                    <!--  Overlay info  -->
                                    <Border
                                        Margin="12"
                                        Padding="8"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Background="#80000000">
                                        <StackPanel>
                                            <TextBlock
                                                FontSize="12"
                                                FontWeight="Bold"
                                                Foreground="#FFFFFF"
                                                Text="IMAGE MASK" />
                                            <TextBlock
                                                FontSize="10"
                                                Foreground="{StaticResource TextBrush}"
                                                Text="{Binding BinaryThreshold, StringFormat=Binary Threshold: {0}}" />
                                            <TextBlock
                                                FontSize="10"
                                                Foreground="{StaticResource TextBrush}"
                                                Text="{Binding ObjectsDetected, StringFormat=Objects: {0}}" />
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </Border>

                        </Grid>
                    </Grid>
                </Border>
            </Grid>

            <!--  Right sidebar - stacked cards  -->
            <ScrollViewer Grid.Row="1" Grid.Column="2">
                <StackPanel
                    Margin="0"
                    VerticalAlignment="Top"
                    Spacing="12">

                    <!--  Server Card  -->
                    <Border Classes="card">
                        <StackPanel IsEnabled="{Binding IsConnected}">

                            <TextBlock
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource TextBrush}"
                                Text="RMP Status" />

                            <StackPanel
                                Margin="0,12,0,0"
                                IsVisible="{Binding IsConnected}"
                                Spacing="12">

                                <!--  controller  -->
                                <controls:StatusLabel
                                    Title="Controller"
                                    IsActive="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    TitleOpacity="1">
                                    <controls:StatusLabel.Styles>
                                        <Style Selector="controls|StatusLabel[IsActive=true]">
                                            <Setter Property="Value" Value="Created" />
                                        </Style>
                                        <Style Selector="controls|StatusLabel[IsActive=false]">
                                            <Setter Property="Value" Value="Not created" />
                                        </Style>
                                    </controls:StatusLabel.Styles>
                                </controls:StatusLabel>

                                <controls:StatusLabel
                                    Title="Counter"
                                    Margin="0,-10,0,0"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsMonoFont="True"
                                    Value="{Binding ControllerStatus.SampleCounter, FallbackValue='-', StringFormat=N0}" />

                                <!--  network  -->
                                <controls:StatusLabel
                                    Title="EtherCAT Network"
                                    IsActive="{Binding NetworkStatus.State, Converter={x:Static converters:BoolConverters.StringEqualsParameterConverter}, ConverterParameter='Operational', FallbackValue=False}"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    TitleOpacity="1"
                                    Value="{Binding NetworkStatus.State, FallbackValue='-'}" />

                                <controls:StatusLabel
                                    Title="Counter"
                                    Margin="0,-10,0,0"
                                    IsEnabled="{Binding NetworkStatus.State, Converter={x:Static converters:BoolConverters.StringEqualsParameterConverter}, ConverterParameter='Operational', FallbackValue=False}"
                                    IsMonoFont="True"
                                    IsValueVisible="{Binding $self.IsEnabled}"
                                    Value="{Binding NetworkStatus.Counter, FallbackValue='-', StringFormat=N0}" />

                                <!--  taskmanager  -->
                                <controls:StatusLabel
                                    Title="TaskManager"
                                    IsActive="{Binding TaskManagerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsValueVisible="{Binding $self.IsEnabled}"
                                    TitleOpacity="1"
                                    Value="{Binding TaskManagerStatus.State, FallbackValue='-'}" />

                                <ItemsControl
                                    Margin="0,-10,0,0"
                                    HorizontalAlignment="Stretch"
                                    FontSize="12"
                                    ItemsSource="{Binding GlobalValues}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2,0,0" ColumnDefinitions="*,auto">
                                                <TextBlock Opacity="60" Text="{Binding Name}" />
                                                <TextBlock
                                                    Classes="Mono"
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Bottom"
                                                    Classes.is-false="{Binding !Value}"
                                                    Classes.is-true="{Binding Value}">
                                                    <TextBlock.Styles>
                                                        <Style Selector="TextBlock">
                                                            <Setter Property="Text" Value="{Binding Value}" />
                                                        </Style>

                                                        <Style Selector="TextBlock.is-true">
                                                            <Setter Property="Text" Value="✔️" />
                                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                                            <Setter Property="Margin" Value="0 0 -2 3" />
                                                        </Style>

                                                        <Style Selector="TextBlock.is-false">
                                                            <Setter Property="Text" Value="❌" />
                                                            <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                                            <Setter Property="Margin" Value="0 0 -2 3" />
                                                        </Style>

                                                    </TextBlock.Styles>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <controls:StatusLabel
                                    Title="Tasks"
                                    Margin="0,0,0,0"
                                    IsEnabled="{Binding ControllerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    IsMonoFont="True"
                                    IsValueVisible="{Binding $self.IsEnabled}"
                                    TitleOpacity="1"
                                    Value="{Binding TaskManagerStatus.TaskSubmissionCount, FallbackValue='-'}" />

                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!--  Program Card  -->
                    <Border Classes="card" IsEnabled="{Binding IsConnected}">
                        <Border.Styles>
                            <Style Selector="icons|MaterialIcon[IsEnabled=true]">
                                <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidSuccess}" />
                                <Setter Property="Kind" Value="Link" />
                            </Style>

                            <Style Selector="icons|MaterialIcon[IsEnabled=false]">
                                <Setter Property="Foreground" Value="{actipro:ThemeResource ControlBackgroundBrushSolidDanger}" />
                                <Setter Property="Kind" Value="LinkOff" />
                            </Style>
                        </Border.Styles>

                        <StackPanel>

                            <TextBlock
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource TextBrush}"
                                Text="Mapping" />

                            <StackPanel
                                Margin="0,12,0,0"
                                IsVisible="{Binding IsConnected}"
                                Spacing="8">

                                <controls:StatusLabel
                                    Title="Ball"
                                    Margin="0,0,0,-10"
                                    TitleOpacity="1"
                                    Value="" />

                                <StackPanel Orientation="Horizontal" Spacing="8">

                                    <controls:StatusLabel Title="Center X" Value="" />

                                    <icons:MaterialIcon IsEnabled="{Binding Global_BallXValid}" />

                                    <!--  ball x  -->
                                    <AutoCompleteBox
                                        x:Name="BallX_AutoCompleteBox"
                                        Classes="theme-soft"
                                        MinWidth="100"
                                        Margin="-2,0,0,0"
                                        Padding="2"
                                        behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                        Background="Transparent"
                                        BorderThickness="0,0,0,1"
                                        FilterMode="ContainsOrdinal"
                                        ItemsSource="{Binding GlobalValues}"
                                        MinimumPopulateDelay="0"
                                        MinimumPrefixLength="0"
                                        Text="{Binding Global_BallX}"
                                        ValueMemberBinding="{Binding Name}"
                                        Watermark="Select global.." />

                                </StackPanel>

                                <!--  ball y  -->
                                <StackPanel Orientation="Horizontal" Spacing="8">

                                    <controls:StatusLabel Title="Center Y" Value="" />

                                    <icons:MaterialIcon IsEnabled="{Binding Global_BallYValid}" />

                                    <AutoCompleteBox
                                        Classes="theme-soft"
                                        MinWidth="100"
                                        Margin="-2,0,0,0"
                                        Padding="2"
                                        behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                        Background="Transparent"
                                        BorderThickness="0,0,0,1"
                                        FilterMode="ContainsOrdinal"
                                        ItemsSource="{Binding GlobalValues}"
                                        MinimumPopulateDelay="0"
                                        MinimumPrefixLength="0"
                                        Text="{Binding Global_BallY}"
                                        ValueMemberBinding="{Binding Name}"
                                        Watermark="Select global.." />

                                </StackPanel>

                                <!--  ball radius  -->
                                <StackPanel Orientation="Horizontal" Spacing="8">

                                    <controls:StatusLabel Title="Radius" Value="" />

                                    <icons:MaterialIcon IsEnabled="{Binding Global_BallRadiusValid}" />

                                    <AutoCompleteBox
                                        Classes="theme-soft"
                                        MinWidth="100"
                                        Margin="-2,0,0,0"
                                        Padding="2"
                                        behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                        Background="Transparent"
                                        BorderThickness="0,0,0,1"
                                        FilterMode="ContainsOrdinal"
                                        ItemsSource="{Binding GlobalValues}"
                                        MinimumPopulateDelay="0"
                                        MinimumPrefixLength="0"
                                        Text="{Binding Global_BallRadius}"
                                        ValueMemberBinding="{Binding Name}"
                                        Watermark="Select global.." />

                                </StackPanel>

                                <controls:StatusLabel
                                    Title="Program"
                                    Margin="0,0,0,-10"
                                    TitleOpacity="1"
                                    Value="" />

                                <!--  is motion enabled  -->
                                <StackPanel Orientation="Horizontal" Spacing="8">

                                    <controls:StatusLabel Title="Is Motion Enabled" Value="" />

                                    <icons:MaterialIcon IsEnabled="{Binding Global_IsMotionEnabledValid}" />

                                    <AutoCompleteBox
                                        Classes="theme-soft"
                                        MinWidth="100"
                                        Margin="-2,0,0,0"
                                        Padding="2"
                                        behaviors:AutoCompleteBehaviors.ShowSuggestionsOnClick="True"
                                        Background="Transparent"
                                        BorderThickness="0,0,0,1"
                                        FilterMode="ContainsOrdinal"
                                        ItemsSource="{Binding GlobalValues}"
                                        MinimumPopulateDelay="0"
                                        MinimumPrefixLength="0"
                                        Text="{Binding Global_IsMotionEnabled}"
                                        ValueMemberBinding="{Binding Name}"
                                        Watermark="Select global.." />
                                </StackPanel>

                                <!--<controls:StatusLabel
                                Title="Camera"
                                TitleOpacity="1"
                                Value="" />

                            <controls:StatusLabel Title="Is Active" Value="" />

                            <controls:StatusLabel Title="Failure Count" Value="" />

                            <controls:StatusLabel Title="Is Ball Detected" Value="" />-->

                            </StackPanel>
                        </StackPanel>
                    </Border>

                </StackPanel>
            </ScrollViewer>
        </Grid>

    </ContentControl>
</UserControl>
